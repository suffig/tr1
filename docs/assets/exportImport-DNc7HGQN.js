const M={auth:{persistSession:!0,autoRefreshToken:!0,detectSessionInUrl:!0,storageKey:"supabase.auth.token",autoRefreshTokenRetryAttempts:5,tokenRefreshMargin:60},global:{headers:{"X-Client-Info":"fifa-tracker/1.0.0","X-Client-Version":"2.0.0"}},db:{schema:"public"},realtime:{params:{eventsPerSecond:10}}},_=()=>{let u=null,e=[],n=new Map,t="excellent";const i={players:[{id:1,name:"Max M√ºller",team:"AEK",position:"ST",value:12e4,goals:3,created_at:"2024-01-01"},{id:2,name:"Tom Schmidt",team:"AEK",position:"TH",value:1e5,goals:1,created_at:"2024-01-02"},{id:3,name:"Leon Wagner",team:"AEK",position:"IV",value:9e4,goals:1,created_at:"2024-01-03"},{id:4,name:"Tim Fischer",team:"AEK",position:"ZM",value:85e3,goals:1,created_at:"2024-01-04"},{id:5,name:"Jan Becker",team:"Real",position:"ST",value:11e4,goals:4,created_at:"2024-01-05"},{id:6,name:"Paul Klein",team:"Real",position:"TH",value:95e3,goals:1,created_at:"2024-01-06"},{id:7,name:"Lukas Wolf",team:"Real",position:"IV",value:88e3,goals:1,created_at:"2024-01-07"},{id:8,name:"Ben Richter",team:"Real",position:"ZM",value:92e3,goals:1,created_at:"2024-01-08"},{id:9,name:"Alex Weber",team:"Ehemalige",position:"ST",value:75e3,goals:2,created_at:"2024-01-09"},{id:10,name:"Chris Meyer",team:"Ehemalige",position:"ZM",value:7e4,goals:0,created_at:"2024-01-10"}],matches:[{id:1,teama:"AEK",teamb:"Real",goalsa:2,goalsb:1,date:"2024-08-12",created_at:"2024-08-12",manofthematch:"Max M√ºller",goalslista:["Max M√ºller","Tom Schmidt"],goalslistb:["Jan Becker"]},{id:2,teama:"AEK",teamb:"Real",goalsa:1,goalsb:3,date:"2024-08-10",created_at:"2024-08-10",manofthematch:"Jan Becker",goalslista:["Leon Wagner"],goalslistb:["Jan Becker","Paul Klein","Lukas Wolf"]},{id:3,teama:"AEK",teamb:"Real",goalsa:0,goalsb:2,date:"2024-08-08",created_at:"2024-08-08",manofthematch:"Ben Richter",goalslista:[],goalslistb:["Jan Becker","Ben Richter"]},{id:4,teama:"AEK",teamb:"Real",goalsa:2,goalsb:2,date:"2024-08-05",created_at:"2024-08-05",manofthematch:"Max M√ºller",goalslista:["Max M√ºller","Tim Fischer"],goalslistb:["Jan Becker","Paul Klein"]}],bans:[{id:1,player_id:1,matches_remaining:2,reason:"Gelb-Rot Karte",created_at:"2024-08-01"},{id:2,player_id:5,matches_remaining:1,reason:"Unsportlichkeit",created_at:"2024-08-05"}],transactions:[{id:1,amount:-5e4,info:"Spielerkauf: Max M√ºller",team:"AEK",date:"2024-08-10",type:"Spielerkauf",match_id:null},{id:2,amount:3e4,info:"Spielerverkauf: Klaus Meyer",team:"AEK",date:"2024-08-11",type:"Spielerverkauf",match_id:null},{id:3,amount:-45e3,info:"Spielerkauf: Jan Becker",team:"Real",date:"2024-08-10",type:"Spielerkauf",match_id:null},{id:4,amount:25e3,info:"Sponsoring Einnahme",team:"Real",date:"2024-08-11",type:"Sonstiges",match_id:null},{id:5,amount:5e3,info:"Match-Sieg Preisgeld",team:"AEK",date:"2024-08-12",type:"Preisgeld",match_id:1},{id:6,amount:3e3,info:"Match-Niederlage Preisgeld",team:"Real",date:"2024-08-12",type:"Preisgeld",match_id:1},{id:7,amount:1500,info:"SdS Bonus: Max M√ºller",team:"AEK",date:"2024-08-12",type:"SdS Bonus",match_id:1},{id:8,amount:2e3,info:"Liga-Bonus",team:"AEK",date:"2024-08-13",type:"Sonstiges",match_id:null},{id:9,amount:-1e3,info:"Kartenstrafe",team:"Real",date:"2024-08-13",type:"Strafe",match_id:null},{id:10,amount:3e3,info:"Match-Niederlage Preisgeld",team:"AEK",date:"2024-08-10",type:"Preisgeld",match_id:2},{id:11,amount:5e3,info:"Match-Sieg Preisgeld",team:"Real",date:"2024-08-10",type:"Preisgeld",match_id:2},{id:12,amount:1500,info:"SdS Bonus: Jan Becker",team:"Real",date:"2024-08-10",type:"SdS Bonus",match_id:2},{id:13,amount:3e3,info:"Match-Niederlage Preisgeld",team:"AEK",date:"2024-08-08",type:"Preisgeld",match_id:3},{id:14,amount:5e3,info:"Match-Sieg Preisgeld",team:"Real",date:"2024-08-08",type:"Preisgeld",match_id:3},{id:15,amount:1500,info:"SdS Bonus: Ben Richter",team:"Real",date:"2024-08-08",type:"SdS Bonus",match_id:3},{id:16,amount:4e3,info:"Unentschieden Preisgeld",team:"AEK",date:"2024-08-05",type:"Preisgeld",match_id:4},{id:17,amount:4e3,info:"Unentschieden Preisgeld",team:"Real",date:"2024-08-05",type:"Preisgeld",match_id:4},{id:18,amount:1500,info:"SdS Bonus: Max M√ºller",team:"AEK",date:"2024-08-05",type:"SdS Bonus",match_id:4}],finances:[{id:1,team:"AEK",balance:15e4,debt:0,created_at:"2024-01-01"},{id:2,team:"Real",balance:175e3,debt:0,created_at:"2024-01-01"}],spieler_des_spiels:[{id:1,name:"Max M√ºller",team:"AEK",count:3,created_at:"2024-08-01"},{id:2,name:"Jan Becker",team:"Real",count:2,created_at:"2024-08-05"},{id:3,name:"Tom Schmidt",team:"AEK",count:2,created_at:"2024-08-08"},{id:4,name:"Paul Klein",team:"Real",count:1,created_at:"2024-08-10"},{id:5,name:"Leon Wagner",team:"AEK",count:1,created_at:"2024-08-12"},{id:6,name:"Lukas Wolf",team:"Real",count:0,created_at:"2024-08-13"},{id:7,name:"Tim Fischer",team:"AEK",count:0,created_at:"2024-08-13"},{id:8,name:"Ben Richter",team:"Real",count:0,created_at:"2024-08-13"}]},s=(r,a={})=>{let d=[...i[r]||[]];if(a.eq){const[h,o]=a.eq;d=d.filter(l=>l[h]===o)}if(a.neq){const[h,o]=a.neq;d=d.filter(l=>l[h]!==o)}if(a.gt){const[h,o]=a.gt;d=d.filter(l=>l[h]>o)}if(a.gte){const[h,o]=a.gte;d=d.filter(l=>l[h]>=o)}if(a.lt){const[h,o]=a.lt;d=d.filter(l=>l[h]<o)}if(a.lte){const[h,o]=a.lte;d=d.filter(l=>l[h]<=o)}if(a.like){const[h,o]=a.like,l=new RegExp(o.replace(/%/g,".*"),"i");d=d.filter(m=>l.test(m[h]))}if(a.in){const[h,o]=a.in;d=d.filter(l=>o.includes(l[h]))}if(a.order){const[h,o="asc"]=a.order;d.sort((l,m)=>o==="desc"?m[h]>l[h]?1:-1:l[h]>m[h]?1:-1)}if(a.range){const[h,o]=a.range;d=d.slice(h,o+1)}else a.limit&&(d=d.slice(0,a.limit));return d};return{auth:{getSession:()=>{if(!u)try{const r=localStorage.getItem("supabase.auth.token");if(r){const a=JSON.parse(r);a.expires_at&&a.expires_at>Date.now()/1e3?(u=a,console.log("‚úÖ Restored demo session from localStorage")):(localStorage.removeItem("supabase.auth.token"),console.log("üîÑ Demo session expired, removed from localStorage"))}}catch(r){console.warn("Could not restore demo session:",r),localStorage.removeItem("supabase.auth.token")}return Promise.resolve({data:{session:u}})},onAuthStateChange:r=>(console.warn("Supabase auth not available - using fallback"),e.push(r),setTimeout(()=>r(u?"SIGNED_IN":"SIGNED_OUT",u),100),{data:{subscription:{unsubscribe:()=>{e=e.filter(a=>a!==r)}}}}),signInWithPassword:({email:r,password:a})=>{console.warn("‚ö†Ô∏è Supabase signInWithPassword not available - using enhanced fallback demo auth");const d=100;return new Promise(h=>{setTimeout(()=>{if(!r||!a){h({error:new Error("E-Mail und Passwort sind erforderlich.")});return}if(!r.includes("@")){h({error:new Error("Bitte geben Sie eine g√ºltige E-Mail-Adresse ein.")});return}if(a.length<3){h({error:new Error("Passwort zu kurz (mindestens 3 Zeichen f√ºr Demo).")});return}u={user:{id:"demo-user-"+Date.now(),email:r,created_at:new Date().toISOString(),app_metadata:{provider:"demo",providers:["demo"]},user_metadata:{demo_mode:!0,connection_quality:t},aud:"authenticated",role:"authenticated"},access_token:"demo-token-"+Date.now(),refresh_token:"demo-refresh-"+Date.now(),expires_at:Date.now()/1e3+3600,expires_in:3600,token_type:"bearer"};try{localStorage.setItem("supabase.auth.token",JSON.stringify(u))}catch(o){console.warn("Could not persist demo session:",o)}e.forEach(o=>{setTimeout(()=>o("SIGNED_IN",u),50)}),h({data:{user:u.user,session:u},error:null})},d)})},signUp:({email:r,password:a})=>(console.warn("Supabase signUp not available - using fallback demo mode"),!r||!a?Promise.resolve({error:new Error("E-Mail und Passwort sind erforderlich.")}):a.length<6?Promise.resolve({error:new Error("Passwort muss mindestens 6 Zeichen haben.")}):Promise.resolve({data:{user:null,session:null},error:null})),signOut:()=>(console.warn("‚ö†Ô∏è Supabase signOut not available - using enhanced fallback"),new Promise(r=>{u=null;try{localStorage.removeItem("supabase.auth.token")}catch(a){console.warn("Could not clear stored session:",a)}e.forEach(a=>{setTimeout(()=>a("SIGNED_OUT",null),50)}),r({error:null})}))},from:r=>{let a={};const d=()=>{const o=s(r,a);return a={},Promise.resolve({data:o,error:null})},h={select:(o="*")=>h,eq:(o,l)=>(a.eq=[o,l],h),neq:(o,l)=>(a.neq=[o,l],h),gt:(o,l)=>(a.gt=[o,l],h),gte:(o,l)=>(a.gte=[o,l],h),lt:(o,l)=>(a.lt=[o,l],h),lte:(o,l)=>(a.lte=[o,l],h),like:(o,l)=>(a.like=[o,l],h),in:(o,l)=>(a.in=[o,l],h),order:(o,l={})=>(a.order=[o,l.ascending===!1?"desc":"asc"],h),range:(o,l)=>(a.range=[o,l],h),limit:o=>(a.limit=o,h),onConflict:o=>h,single:()=>{const o=s(r,a);a={};const l=o.length>0?o[0]:null;return Promise.resolve({data:l,error:null})},maybeSingle:()=>{const o=s(r,a);a={};const l=o.length>0?o[0]:null;return Promise.resolve({data:l,error:null})},then:(o,l)=>{d().then(o,l)},catch:o=>{d().catch(o)},finally:o=>{d().finally(o)},insert:o=>{console.warn("Supabase insert not available in demo mode - simulating success");const m={id:Math.max(...(i[r]||[]).map(f=>f.id||0))+1,...o,created_at:new Date().toISOString()};return i[r]&&i[r].push(m),{select:(f="*")=>(console.warn("Supabase insert().select() not available in demo mode - simulating success"),{single:()=>(console.warn("Supabase insert().select().single() not available in demo mode - simulating success"),Promise.resolve({data:m,error:null})),then:(p,S)=>{Promise.resolve({data:[m],error:null}).then(p,S)},catch:p=>{Promise.resolve({data:[m],error:null}).catch(p)},finally:p=>{Promise.resolve({data:[m],error:null}).finally(p)}}),single:()=>(console.warn("Supabase insert().single() not available in demo mode - simulating success"),Promise.resolve({data:m,error:null})),then:(f,p)=>{Promise.resolve({data:[m],error:null}).then(f,p)},catch:f=>{Promise.resolve({data:[m],error:null}).catch(f)},finally:f=>{Promise.resolve({data:[m],error:null}).finally(f)}}},update:o=>(console.warn("Supabase update not available in demo mode - simulating success"),{eq:(l,m)=>{console.warn("Supabase update().eq() not available in demo mode - simulating success");const f=s(r,a);a={};const p=f.filter(S=>S[l]===m);return p.forEach(S=>{Object.assign(S,o)}),Promise.resolve({data:p,error:null})},then:(l,m)=>{const f=s(r,a);a={},f.forEach(p=>{Object.assign(p,o)}),Promise.resolve({data:f,error:null}).then(l,m)},catch:l=>{const m=s(r,a);a={},m.forEach(f=>{Object.assign(f,o)}),Promise.resolve({data:m,error:null}).catch(l)},finally:l=>{const m=s(r,a);a={},m.forEach(f=>{Object.assign(f,o)}),Promise.resolve({data:m,error:null}).finally(l)}}),delete:()=>{console.warn("Supabase delete not available in demo mode - simulating success");const o=s(r,a);return a={},i[r]&&o.length>0&&(i[r]=i[r].filter(l=>!o.some(m=>m.id===l.id))),Promise.resolve({data:o,error:null})}};return h},channel:(r="default")=>{console.warn("‚ö†Ô∏è Supabase realtime not available - using enhanced fallback simulation");let a=[],d=!1;const h={on:(o,l,m)=>(console.log(`üì° Simulating real-time subscription for ${o} on ${(l==null?void 0:l.table)||"unknown table"}`),a.push({event:o,config:l,callback:m,id:Math.random().toString(36).substr(2,9)}),h),subscribe:o=>{if(console.log("üì° Simulating subscription activation..."),d=!0,n.set(r,{subscriptions:a,isActive:!0,created:Date.now()}),setTimeout(()=>{typeof o=="function"&&o("SUBSCRIBING")},50),setTimeout(()=>{typeof o=="function"&&(o("SUBSCRIBED"),console.log("‚úÖ Real-time subscription simulation active"))},100),a.some(l=>{var m;return(m=l.config)==null?void 0:m.table})){const l=setInterval(()=>{if(!d){clearInterval(l);return}Math.random()<.1&&a.forEach(m=>{var f;if((f=m.config)!=null&&f.table&&typeof m.callback=="function"){const p={eventType:["INSERT","UPDATE","DELETE"][Math.floor(Math.random()*3)],new:{id:Math.floor(Math.random()*1e3),updated_at:new Date().toISOString()},old:{},table:m.config.table,schema:"public",commit_timestamp:new Date().toISOString()};console.log("üì° Simulated real-time update:",p),m.callback(p)}})},5e3)}return h},unsubscribe:()=>(console.log("üì° Unsubscribing from real-time channel simulation"),d=!1,n.delete(r),Promise.resolve({error:null}))};return h},removeChannel:r=>(console.log("üì° Removing real-time channel simulation"),r&&typeof r.unsubscribe=="function"&&r.unsubscribe(),Promise.resolve({error:null}))}};var C,A;const k=typeof process<"u"&&((C=process==null?void 0:process.env)==null?void 0:C.VITE_SUPABASE_URL)||typeof process<"u"&&((A=process==null?void 0:process.env)==null?void 0:A.REACT_APP_SUPABASE_URL)||"https://buduldeczjwnjvsckqat.supabase.co";var x,q;const R=typeof process<"u"&&((x=process==null?void 0:process.env)==null?void 0:x.VITE_SUPABASE_ANON_KEY)||typeof process<"u"&&((q=process==null?void 0:process.env)==null?void 0:q.REACT_APP_SUPABASE_ANON_KEY)||"sb_publishable_wcOHaKNEW9rQ3anrRNlEpA_r1_wGda3";let g,w=!1;async function P(){const u=["https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/dist/umd/supabase.min.js","https://unpkg.com/@supabase/supabase-js@2/dist/umd/supabase.min.js","https://cdn.skypack.dev/@supabase/supabase-js@2"];for(const e of u)try{console.log(`üîÑ Attempting to load Supabase from: ${e}`);const n=document.createElement("script");n.src=e,n.crossOrigin="anonymous";const t=new Promise((i,s)=>{n.onload=()=>{const c=window.supabase||window.Supabase||window.supabaseJs;c&&c.createClient?(console.log(`‚úÖ Successfully loaded Supabase from: ${e}`),window.supabase=c,i(!0)):s(new Error("Supabase object not found after loading"))},n.onerror=()=>s(new Error(`Failed to load script from ${e}`)),setTimeout(()=>s(new Error(`Timeout loading from ${e}`)),5e3)});return document.head.appendChild(n),await t,n.remove(),!0}catch(n){console.warn(`‚ùå Failed to load from ${e}:`,n.message),document.querySelectorAll(`script[src="${e}"]`).forEach(i=>i.remove())}throw new Error("All CDN sources failed to load")}async function D(){try{const u=window.supabase||window.Supabase||window.supabaseJs;(!u||!u.createClient)&&await P();const e=window.supabase||window.Supabase||window.supabaseJs;if(!e||!e.createClient)throw new Error("Failed to load Supabase library from CDN");console.log("üîÑ Creating Supabase client with credentials..."),console.log("URL:",k),console.log("Key:",R.substring(0,20)+"..."),g=e.createClient(k,R,M);try{const{data:n,error:t}=await g.from("players").select("id").limit(1);t?console.warn("Database test query failed:",t.message):console.log("‚úÖ Database connection test successful")}catch(n){console.warn("Database connection test failed:",n.message)}console.log("‚úÖ Supabase client created successfully"),w=!1;return}catch(u){console.warn("‚ö†Ô∏è Failed to connect to Supabase, using fallback mode:",u.message),console.log("üìù Fallback mode provides demo data and simulated database operations"),w=!0,g=_()}}try{const u=window.supabase||window.Supabase||window.supabaseJs;if(u&&u.createClient)console.log("üîÑ Creating Supabase client..."),g=u.createClient(k,R,M),console.log("‚úÖ Supabase client created successfully"),w=!1;else throw new Error("Supabase library not available (CDN may be blocked)")}catch(u){console.warn("‚ö†Ô∏è Initial Supabase connection failed, using fallback:",u.message),console.log("üìù Will attempt CDN loading and retry automatically..."),w=!0,g=_()}typeof window<"u"&&(window.initializeSupabase=D,w&&(console.log("üîÑ Scheduling automatic retry of Supabase initialization..."),setTimeout(async()=>{try{console.log("üîÑ Retrying Supabase initialization..."),await D(),w||(console.log("‚úÖ Supabase initialization successful on retry"),window.dispatchEvent(new CustomEvent("supabase-reconnected",{detail:{timestamp:new Date().toISOString()}})))}catch{console.log("üîÑ Retry failed, staying in fallback mode")}},5e3)));class I{constructor(e){this.client=e,this.maxRetries=3,this.baseDelay=1e3,this.maxDelay=3e4,this.connectionStats={totalRequests:0,successfulRequests:0,failedRequests:0,averageResponseTime:0,lastResponseTime:0},this.requestQueue=[],this.isProcessingQueue=!1,this.maxConcurrentRequests=5,this.activeRequests=0}getStats(){return{...this.connectionStats,successRate:this.connectionStats.totalRequests>0?(this.connectionStats.successfulRequests/this.connectionStats.totalRequests*100).toFixed(2)+"%":"0%",activeRequests:this.activeRequests,queuedRequests:this.requestQueue.length}}resetStats(){this.connectionStats={totalRequests:0,successfulRequests:0,failedRequests:0,averageResponseTime:0,lastResponseTime:0}}async retryOperation(e,n=this.maxRetries,t="normal"){return new Promise((i,s)=>{const c={operation:e,maxRetries:n,priority:t,resolve:i,reject:s,timestamp:Date.now()};t==="high"?this.requestQueue.unshift(c):this.requestQueue.push(c),this.processQueue()})}async processQueue(){if(!(this.isProcessingQueue||this.activeRequests>=this.maxConcurrentRequests)){for(this.isProcessingQueue=!0;this.requestQueue.length>0&&this.activeRequests<this.maxConcurrentRequests;){const e=this.requestQueue.shift();this.executeRequest(e)}this.isProcessingQueue=!1}}async executeRequest(e){this.activeRequests++,this.connectionStats.totalRequests++;const n=performance.now();let t=null;try{for(let i=1;i<=e.maxRetries;i++)try{const s=await e.operation();if(s.error)throw s.error;const c=performance.now()-n;this.updateResponseTimeMetrics(c),this.connectionStats.successfulRequests++,e.resolve(s);return}catch(s){if(t=s,console.warn(`Database operation failed (attempt ${i}/${e.maxRetries}):`,s),this.isNonRetryableError(s)||i===e.maxRetries)break;const c=Math.min(this.baseDelay*Math.pow(2,i-1),this.maxDelay),r=Math.random()*.1*c,a=c+r;await new Promise(d=>setTimeout(d,a))}this.connectionStats.failedRequests++,e.reject(t)}catch(i){this.connectionStats.failedRequests++,e.reject(i)}finally{this.activeRequests--,setTimeout(()=>this.processQueue(),0)}}updateResponseTimeMetrics(e){this.connectionStats.lastResponseTime=e,this.connectionStats.averageResponseTime===0?this.connectionStats.averageResponseTime=e:this.connectionStats.averageResponseTime=this.connectionStats.averageResponseTime*.8+e*.2}isNonRetryableError(e){if(!e)return!1;const n=e.message?e.message.toLowerCase():"",t=e.code;return!!(n.includes("auth")||n.includes("unauthorized")||n.includes("forbidden")||t==="PGRST301"||t==="PGRST116"||t==="23505"||t==="23503"||e.status&&e.status>=400&&e.status<500)}async select(e,n="*",t={},i="normal"){if(!e)throw new Error("Table name is required");return this.retryOperation(async()=>{let s=this.client.from(e).select(n);return t.eq&&Object.entries(t.eq).forEach(([c,r])=>{r!=null&&(s=s.eq(c,r))}),t.neq&&Object.entries(t.neq).forEach(([c,r])=>{s=s.neq(c,r)}),t.gt&&Object.entries(t.gt).forEach(([c,r])=>{s=s.gt(c,r)}),t.gte&&Object.entries(t.gte).forEach(([c,r])=>{s=s.gte(c,r)}),t.lt&&Object.entries(t.lt).forEach(([c,r])=>{s=s.lt(c,r)}),t.lte&&Object.entries(t.lte).forEach(([c,r])=>{s=s.lte(c,r)}),t.like&&Object.entries(t.like).forEach(([c,r])=>{s=s.like(c,r)}),t.in&&Object.entries(t.in).forEach(([c,r])=>{Array.isArray(r)&&r.length>0&&(s=s.in(c,r))}),t.order&&(Array.isArray(t.order)?t.order.forEach(c=>{s=s.order(c.column,{ascending:c.ascending??!0})}):s=s.order(t.order.column,{ascending:t.order.ascending??!0})),t.limit&&(s=s.limit(Math.min(t.limit,1e3))),t.range&&(s=s.range(t.range.from,t.range.to)),await s},this.maxRetries,i)}async insert(e,n,t={},i="normal"){if(!e)throw new Error("Table name is required");if(!n)throw new Error("Data is required for insert");return this.retryOperation(async()=>{let s=this.client.from(e).insert(n);return t.returning!==!1&&(s=s.select()),t.onConflict&&(s=s.onConflict(t.onConflict)),await s},this.maxRetries,i)}async update(e,n,t={},i={},s="normal"){if(!e)throw new Error("Table name is required");if(!n)throw new Error("Data is required for update");if(Object.keys(t).length===0)throw new Error("At least one condition is required for update");return this.retryOperation(async()=>{let c=this.client.from(e).update(n);return Object.entries(t).forEach(([r,a])=>{a!=null&&(c=c.eq(r,a))}),i.returning!==!1&&(c=c.select()),await c},this.maxRetries,s)}async deleteRow(e,n={},t="normal"){if(!e)throw new Error("Table name is required");if(Object.keys(n).length===0)throw new Error("At least one condition is required for delete");return this.retryOperation(async()=>{let i=this.client.from(e).delete();return Object.entries(n).forEach(([s,c])=>{c!=null&&(i=i.eq(s,c))}),await i},this.maxRetries,t)}async upsert(e,n,t={},i="normal"){if(!e)throw new Error("Table name is required");if(!n)throw new Error("Data is required for upsert");return this.retryOperation(async()=>{let s=this.client.from(e).upsert(n);return t.onConflict&&(s=s.onConflict(t.onConflict)),t.returning!==!1&&(s=s.select()),await s},this.maxRetries,i)}async batchSelect(e){const n=e.map(i=>this.select(i.table,i.query,i.options,i.priority||"normal"));return(await Promise.allSettled(n)).map((i,s)=>({success:i.status==="fulfilled",data:i.status==="fulfilled"?i.value:null,error:i.status==="rejected"?i.reason:null,operation:e[s]}))}async healthCheck(){try{const e=await this.select("players","id",{limit:1},"high");return{healthy:!0,responseTime:this.connectionStats.lastResponseTime}}catch(e){return{healthy:!1,error:e.message}}}getClient(){return this.client}}const y=new I(g),{data:z}=g.auth.onAuthStateChange((u,e)=>{var t;const n=((t=e==null?void 0:e.user)==null?void 0:t.email)||"No user";console.log(`Auth state changed: ${u}`,n),u==="SIGNED_IN"?(console.log("‚úÖ User signed in successfully"),y.resetStats()):u==="SIGNED_OUT"?(console.log("üëã User signed out"),y.resetStats()):u==="TOKEN_REFRESHED"?e?console.log("üîÑ Auth token refreshed successfully"):(console.error("‚ùå Token refresh failed - user may need to re-authenticate"),window.dispatchEvent(new CustomEvent("supabase-session-expired",{detail:{timestamp:new Date().toISOString()}}))):u==="USER_UPDATED"?console.log("üë§ User profile updated"):u==="PASSWORD_RECOVERY"&&console.log("üîê Password recovery initiated"),window.dispatchEvent(new CustomEvent("auth-state-change",{detail:{event:u,session:e,user:e==null?void 0:e.user}}))});typeof window<"u"&&(window.supabase=g,window.supabaseDb=y,window.supabaseDebug={getStats:()=>y.getStats(),resetStats:()=>y.resetStats(),healthCheck:()=>y.healthCheck(),getQueueLength:()=>y.requestQueue.length,getActiveRequests:()=>y.activeRequests},(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1")&&setInterval(()=>{const u=y.getStats();u.totalRequests>0&&console.log("üìä Supabase Stats:",u)},6e4));class L{constructor(){this.slowQueryThreshold=2e3,this.slowQueries=[],this.maxSlowQueries=10}logSlowQuery(e,n,t,i){if(n>this.slowQueryThreshold){const s={operation:e,duration:Math.round(n),table:t,query:i||"N/A",timestamp:new Date().toISOString()};this.slowQueries.unshift(s),this.slowQueries.length>this.maxSlowQueries&&this.slowQueries.pop(),console.warn("üêå Slow database query detected:",s)}}getSlowQueries(){return this.slowQueries}clearSlowQueries(){this.slowQueries=[]}}const O=new L;typeof window<"u"&&(window.dbPerformanceMonitor=O);const N=4*60*1e3;class B{constructor(){this.isConnected=!0,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectDelay=1e3,this.maxReconnectDelay=3e4,this.healthCheckInterval=3e4,this.keepAliveTimer=null,this.healthCheckTimer=null,this.reconnectTimer=null,this.listeners=[],this.lastSuccessfulConnection=Date.now(),this.isPaused=!1,this.connectionType="unknown",this.lastError=null,this.connectionMetrics={totalConnections:0,successfulConnections:0,failedConnections:0,averageResponseTime:0,lastResponseTime:0},this.detectConnectionType(),this.startHealthCheck(),this.setupNetworkListeners(),this.startKeepAlive()}detectConnectionType(){w?(this.connectionType="fallback",console.log("üîÑ Connection type: Fallback mode (demo data)")):navigator.onLine?(this.connectionType="real",console.log("‚úÖ Connection type: Real database")):(this.connectionType="offline",this.isConnected=!1,console.log("üì¥ Connection type: Offline"))}addListener(e){this.listeners.push(e),setTimeout(()=>{e({connected:this.isConnected,connectionType:this.connectionType,metrics:this.connectionMetrics,lastError:this.lastError})},0)}removeListener(e){this.listeners=this.listeners.filter(n=>n!==e)}notifyListeners(e){const n={...e,connectionType:this.connectionType,metrics:this.connectionMetrics,timestamp:Date.now()};this.listeners.forEach(t=>{try{t(n)}catch(i){console.error("Error in connection listener:",i)}})}async checkConnection(){const e=performance.now();this.connectionMetrics.totalConnections++;try{if(w){const i=Math.random()*100+50;return this.updateMetrics(i,!0),this.isConnected||(console.log("üîÑ Demo mode - simulating connection restored"),this.isConnected=!0,this.reconnectAttempts=0,this.reconnectDelay=1e3,this.lastSuccessfulConnection=Date.now(),this.lastError=null,this.notifyListeners({connected:!0,reconnected:!0,message:"Demo-Modus aktiv - Simulierte Daten verf√ºgbar"})),!0}if(!navigator.onLine)throw new Error("Keine Internetverbindung");const n=new AbortController,t=setTimeout(()=>n.abort(),1e4);try{const{data:i,error:s}=await g.from("players").select("id").limit(1).abortSignal(n.signal);if(clearTimeout(t),s)throw s;const c=performance.now()-e;return this.updateMetrics(c,!0),this.isConnected||(console.log("‚úÖ Database connection restored"),this.isConnected=!0,this.reconnectAttempts=0,this.reconnectDelay=1e3,this.lastSuccessfulConnection=Date.now(),this.lastError=null,this.connectionType="real",this.notifyListeners({connected:!0,reconnected:!0,message:"Datenbankverbindung wiederhergestellt"})),!0}catch(i){throw clearTimeout(t),i.name==="AbortError"?new Error("Verbindungstest-Timeout (> 10s)"):i}}catch(n){return this.updateMetrics(performance.now()-e,!1),this.lastError=n,console.warn("‚ùå Database connection check failed:",n.message),this.isConnected&&(console.log("üì¥ Database connection lost"),this.isConnected=!1,this.connectionType=n.message.includes("Internetverbindung")?"offline":"disconnected",this.notifyListeners({connected:!1,error:n,message:this.getErrorMessage(n)})),!1}}updateMetrics(e,n){this.connectionMetrics.lastResponseTime=e,n?(this.connectionMetrics.successfulConnections++,this.connectionMetrics.averageResponseTime===0?this.connectionMetrics.averageResponseTime=e:this.connectionMetrics.averageResponseTime=this.connectionMetrics.averageResponseTime*.7+e*.3):this.connectionMetrics.failedConnections++}getErrorMessage(e){if(!e)return"Unbekannter Fehler";const n=e.message.toLowerCase();return n.includes("internetverbindung")||n.includes("network")?"Keine Internetverbindung":n.includes("timeout")?"Verbindungs-Timeout - Server antwortet nicht":n.includes("auth")||n.includes("unauthorized")?"Authentifizierungsfehler - Bitte neu anmelden":n.includes("cdn")||n.includes("blocked")?"CDN blockiert - Fallback-Modus wird verwendet":`Datenbankfehler: ${e.message}`}async attemptReconnection(){if(this.isPaused){console.log("‚è∏Ô∏è Skipping reconnection attempt - monitor is paused");return}if(this.reconnectAttempts>=this.maxReconnectAttempts){console.error("‚ùå Max reconnection attempts reached"),this.notifyListeners({connected:!1,maxAttemptsReached:!0,nextRetry:Date.now()+this.maxReconnectDelay,message:"Maximale Wiederverbindungsversuche erreicht - Warte l√§nger..."}),this.reconnectTimer=setTimeout(()=>{this.isPaused||(console.log("üîÑ Resetting reconnection attempts after extended wait"),this.reconnectAttempts=0,this.reconnectDelay=1e3,this.attemptReconnection())},this.maxReconnectDelay);return}if(this.reconnectAttempts++,console.log(`üîÑ Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})`),!navigator.onLine){console.log("üì¥ Network is offline, waiting for network recovery..."),this.notifyListeners({connected:!1,networkOffline:!0,reconnecting:!1,message:"Warte auf Netzwerkverbindung..."}),this.reconnectAttempts--,this.reconnectTimer=setTimeout(()=>{this.isPaused||this.attemptReconnection()},5e3);return}if(!await this.checkConnection()&&!this.isPaused){const n=Math.min(this.reconnectDelay*2,this.maxReconnectDelay),t=Math.random()*.3*n;this.reconnectDelay=n+t,this.notifyListeners({connected:!1,reconnecting:!0,attempt:this.reconnectAttempts,nextRetry:Date.now()+this.reconnectDelay,message:`Wiederverbindung... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`}),this.reconnectTimer=setTimeout(()=>{this.isPaused||this.attemptReconnection()},this.reconnectDelay)}}startHealthCheck(){this.healthCheckTimer&&clearInterval(this.healthCheckTimer),this.healthCheckTimer=setInterval(async()=>{if(this.isPaused||!this.isConnected)return;await this.checkConnection()||this.attemptReconnection()},this.healthCheckInterval)}startKeepAlive(){this.keepAliveTimer&&clearInterval(this.keepAliveTimer),this.keepAliveTimer=setInterval(async()=>{if(!this.isPaused&&this.isConnected)try{await g.from("players").select("id").limit(1)}catch(e){console.warn("KeepAlive failed:",e.message)}},N)}stopKeepAlive(){this.keepAliveTimer&&(clearInterval(this.keepAliveTimer),this.keepAliveTimer=null)}pauseHealthChecks(){console.log("Pausing connection health checks"),this.isPaused=!0,this.healthCheckTimer&&(clearInterval(this.healthCheckTimer),this.healthCheckTimer=null),this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null),this.stopKeepAlive()}resumeHealthChecks(){console.log("Resuming connection health checks"),this.isPaused=!1,this.startHealthCheck(),this.startKeepAlive(),this.isConnected||this.checkConnection()}setupNetworkListeners(){window.addEventListener("online",()=>{console.log("üåê Network connection restored"),this.connectionType=w?"fallback":"real",this.isConnected||(this.reconnectAttempts=0,this.reconnectDelay=1e3,this.checkConnection())}),window.addEventListener("offline",()=>{console.log("üì¥ Network connection lost"),this.isConnected=!1,this.connectionType="offline",this.lastError=new Error("Keine Internetverbindung"),this.notifyListeners({connected:!1,networkOffline:!0,message:"Netzwerkverbindung verloren"})}),window.addEventListener("supabase-session-expired",()=>{console.log("üîê Supabase session expired"),this.isConnected=!1,this.connectionType="expired",this.lastError=new Error("Session abgelaufen"),this.notifyListeners({connected:!1,sessionExpired:!0,message:"Session abgelaufen - Bitte neu anmelden"})}),document.addEventListener("visibilitychange",()=>{document.hidden?(console.log("üì± App hidden - reducing health check frequency"),this.healthCheckInterval=6e4):(console.log("üì± App visible - resuming normal health checks"),this.healthCheckInterval=3e4,this.startHealthCheck(),this.isPaused||this.checkConnection())})}getStatus(){return{connected:this.isConnected,connectionType:this.connectionType,reconnectAttempts:this.reconnectAttempts,maxReconnectAttempts:this.maxReconnectAttempts,lastSuccessfulConnection:this.lastSuccessfulConnection,timeSinceLastConnection:Date.now()-this.lastSuccessfulConnection,isPaused:this.isPaused,lastError:this.lastError,metrics:{...this.connectionMetrics,successRate:this.connectionMetrics.totalConnections>0?Math.round(this.connectionMetrics.successfulConnections/this.connectionMetrics.totalConnections*100):0},networkOnline:navigator.onLine,usingFallback:w}}getDiagnostics(){return{...this.getStatus(),timestamp:new Date().toISOString(),userAgent:navigator.userAgent,connectionSpeed:this.estimateConnectionSpeed(),recommendations:this.getRecommendations()}}estimateConnectionSpeed(){if(this.connectionMetrics.averageResponseTime===0)return"unknown";const e=this.connectionMetrics.averageResponseTime;return e<100?"fast":e<500?"medium":e<1e3?"slow":"very-slow"}getRecommendations(){const e=[];return this.isConnected||(navigator.onLine?this.connectionType==="fallback"?(e.push("CDN ist blockiert - Demo-Modus wird verwendet"),e.push("Konfigurieren Sie Supabase-Credentials f√ºr echte Datenbankverbindung")):this.connectionType==="expired"?e.push("Melden Sie sich erneut an"):e.push("Server tempor√§r nicht erreichbar - Wiederverbindung l√§uft..."):e.push("√úberpr√ºfen Sie Ihre Internetverbindung")),this.connectionMetrics.averageResponseTime>2e3&&e.push("Langsame Verbindung erkannt - √úberpr√ºfen Sie Ihre Netzwerkgeschwindigkeit"),this.connectionMetrics.failedConnections>5&&e.push("H√§ufige Verbindungsfehler - √úberpr√ºfen Sie Ihre Netzwerkstabilit√§t"),e}destroy(){this.healthCheckTimer&&clearInterval(this.healthCheckTimer),this.reconnectTimer&&clearTimeout(this.reconnectTimer),this.keepAliveTimer&&clearInterval(this.keepAliveTimer),this.listeners=[]}}const K=new B;function $(){return w||K.isConnected}class j{constructor(){this.cache=new Map,this.pendingRequests=new Map,this.cacheExpiry=new Map,this.defaultCacheTTL=3e4,this.batchQueue=[],this.batchTimer=null,this.batchDelay=100,this.validationRules=this.initValidationRules()}initValidationRules(){return{players:{name:{required:!0,type:"string",minLength:1},team:{required:!0,type:"string"},value:{required:!1,type:"number",min:0},goals:{required:!1,type:"number",min:0},position:{required:!1,type:"string"}},matches:{date:{required:!0,type:"string"},teama:{required:!0,type:"string"},teamb:{required:!0,type:"string"},goalsa:{required:!0,type:"number",min:0},goalsb:{required:!0,type:"number",min:0},goalslista:{required:!1},goalslistb:{required:!1},yellowa:{required:!1,type:"number",min:0},reda:{required:!1,type:"number",min:0},yellowb:{required:!1,type:"number",min:0},redb:{required:!1,type:"number",min:0},manofthematch:{required:!1,type:"string"},prizeaek:{required:!1,type:"number"},prizereal:{required:!1,type:"number"}},bans:{player_id:{required:!1,type:"number"},team:{required:!0,type:"string"},type:{required:!0,type:"string"},totalgames:{required:!0,type:"number",min:0},matchesserved:{required:!1,type:"number",min:0},reason:{required:!1,type:"string"}},transactions:{date:{required:!0,type:"string"},type:{required:!0,type:"string"},team:{required:!0,type:"string"},amount:{required:!0,type:"number"},info:{required:!1,type:"string"},match_id:{required:!1,type:"number"}},finances:{team:{required:!0,type:"string"},balance:{required:!1,type:"number"},debt:{required:!1,type:"number"}},spieler_des_spiels:{name:{required:!0,type:"string",minLength:1},team:{required:!0,type:"string"},count:{required:!1,type:"number",min:0}}}}validateData(e,n){const t=this.validationRules[e];if(!t)return{valid:!0};const i=[];for(const[s,c]of Object.entries(t)){const r=n[s];if(c.required&&(r==null||r==="")){i.push(`${s} ist erforderlich`);continue}!c.required&&(r==null||r==="")||(c.type==="string"&&typeof r!="string"?i.push(`${s} muss ein Text sein`):c.type==="number"&&(typeof r!="number"||isNaN(r))&&i.push(`${s} muss eine Zahl sein`),c.type==="string"&&typeof r=="string"&&(c.minLength&&r.length<c.minLength&&i.push(`${s} muss mindestens ${c.minLength} Zeichen haben`),c.maxLength&&r.length>c.maxLength&&i.push(`${s} darf maximal ${c.maxLength} Zeichen haben`)),c.type==="number"&&typeof r=="number"&&(c.min!==void 0&&r<c.min&&i.push(`${s} muss mindestens ${c.min} sein`),c.max!==void 0&&r>c.max&&i.push(`${s} darf maximal ${c.max} sein`)),c.enum&&!c.enum.includes(r)&&i.push(`${s} muss einer der folgenden Werte sein: ${c.enum.join(", ")}`))}return{valid:i.length===0,errors:i}}sanitizeData(e){const n={};for(const[t,i]of Object.entries(e))typeof i=="string"?n[t]=i.trim().replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,""):n[t]=i;return n}getCacheKey(e,n={}){return`${e}:${JSON.stringify(n)}`}isCacheValid(e){const n=this.cacheExpiry.get(e);return n&&Date.now()<n}setCache(e,n,t=this.defaultCacheTTL){this.cache.set(e,n),this.cacheExpiry.set(e,Date.now()+t)}getCache(e){return this.isCacheValid(e)?this.cache.get(e):(this.cache.delete(e),this.cacheExpiry.delete(e),null)}invalidateCache(e=null){if(e)for(const n of this.cache.keys())n.includes(e)&&(this.cache.delete(n),this.cacheExpiry.delete(n));else this.cache.clear(),this.cacheExpiry.clear()}async executeWithRetry(e,n=3){if(!$())throw new Error("Keine Datenbankverbindung verf√ºgbar. Bitte sp√§ter versuchen.");let t;for(let i=1;i<=n;i++)try{const s=await e();if(s&&s.error)throw s.error;return s}catch(s){if(t=s,console.warn(`Database operation failed (attempt ${i}/${n}):`,s),i===n||this.isNonRetryableError(s))break;const c=Math.min(1e3*Math.pow(2,i-1),5e3);await new Promise(r=>setTimeout(r,c))}throw t}isNonRetryableError(e){if(!e)return!1;const n=e.message||"";return n.includes("auth")||n.includes("permission")||n.includes("constraint")||e.code==="PGRST301"||e.code==="PGRST116"}async batchedSelect(e){return(await Promise.allSettled(e.map(t=>this.select(t.table,t.query,t.options)))).map((t,i)=>({key:e[i].key,success:t.status==="fulfilled",data:t.status==="fulfilled"?t.value:null,error:t.status==="rejected"?t.reason:null}))}async select(e,n="*",t={}){const i=this.getCacheKey(e,{query:n,options:t}),s=this.getCache(i);if(s!==null)return{data:s,fromCache:!0};if(this.pendingRequests.has(i))return this.pendingRequests.get(i);const c=this.executeWithRetry(async()=>{let r=g.from(e).select(n);return t.eq&&Object.entries(t.eq).forEach(([a,d])=>{r=r.eq(a,d)}),t.order&&(r=r.order(t.order.column,{ascending:t.order.ascending??!0})),t.limit&&(r=r.limit(t.limit)),t.range&&(r=r.range(t.range.from,t.range.to)),await r}).then(r=>(this.pendingRequests.delete(i),r&&r.data&&this.setCache(i,r.data),r)).catch(r=>{throw this.pendingRequests.delete(i),r});return this.pendingRequests.set(i,c),c}async insert(e,n){const t=this.sanitizeData(n),i=this.validateData(e,t);if(!i.valid)throw new Error(`Validierungsfehler: ${i.errors.join(", ")}`);const s=await this.executeWithRetry(async()=>await g.from(e).insert([t]).select());return this.invalidateCache(e),s}async update(e,n,t){const i=this.sanitizeData(n),s=this.validateData(e,i);if(!s.valid)throw new Error(`Validierungsfehler: ${s.errors.join(", ")}`);const c=await this.executeWithRetry(async()=>await g.from(e).update(i).eq("id",t).select());return this.invalidateCache(e),c}async delete(e,n){if(!n)throw new Error("ID ist erforderlich zum L√∂schen");const t=await this.executeWithRetry(async()=>await g.from(e).delete().eq("id",n));return this.invalidateCache(e),t}async upsert(e,n){const t=this.sanitizeData(n),i=this.validateData(e,t);if(!i.valid)throw new Error(`Validierungsfehler: ${i.errors.join(", ")}`);const s=await this.executeWithRetry(async()=>await g.from(e).upsert(t).select());return this.invalidateCache(e),s}async getPlayersByTeam(e){return this.select("players","*",{eq:{team:e}})}async getAllMatches(){return this.select("matches","*",{order:{column:"id",ascending:!1}})}async getBans(){return this.select("bans","*")}async getFinances(){return this.select("finances","*")}async getTransactions(){return this.select("transactions","*",{order:{column:"id",ascending:!1}})}async getSpielerDesSpiels(){return this.select("spieler_des_spiels","*")}async loadAllAppData(){const e=[{key:"matches",table:"matches",query:"*",options:{order:{column:"id",ascending:!1}}},{key:"players",table:"players",query:"*",options:{}},{key:"bans",table:"bans",query:"*",options:{}},{key:"finances",table:"finances",query:"*",options:{}},{key:"transactions",table:"transactions",query:"*",options:{order:{column:"id",ascending:!1}}},{key:"spieler_des_spiels",table:"spieler_des_spiels",query:"*",options:{}}],n=await this.batchedSelect(e),t={};for(const i of n)i.success?t[i.key]=i.data.data||[]:(console.error(`Failed to load ${i.key}:`,i.error),t[i.key]=[]);return t.matches&&(t.matches=t.matches.map(i=>{try{typeof i.goalslista=="string"&&(i.goalslista=JSON.parse(i.goalslista)),typeof i.goalslistb=="string"&&(i.goalslistb=JSON.parse(i.goalslistb)),Array.isArray(i.goalslista)||(i.goalslista=[]),Array.isArray(i.goalslistb)||(i.goalslistb=[])}catch(s){console.warn("Error parsing goals for match",i.id,s),i.goalslista=[],i.goalslistb=[]}return i})),t}async healthCheck(){try{return await this.select("players","id",{limit:1}),!0}catch(e){return console.error("Health check failed:",e),!1}}}const v=new j;class U{constructor(){this.loadingStates=new Set,this.loadingIndicators=new Map}show(e,n=null,t="L√§dt..."){if(this.loadingStates.add(e),n){const i=this.createLoadingIndicator(t);this.loadingIndicators.set(e,{element:n,indicator:i,originalContent:n.innerHTML}),n.innerHTML="",n.appendChild(i)}this.updateGlobalLoadingState()}hide(e){if(this.loadingStates.delete(e),this.loadingIndicators.has(e)){const{element:n,originalContent:t}=this.loadingIndicators.get(e);n.innerHTML=t,this.loadingIndicators.delete(e)}this.updateGlobalLoadingState()}createLoadingIndicator(e){const n=document.createElement("div");return n.className="flex items-center justify-center py-4",n.innerHTML=`
            <div class="flex items-center space-x-2">
                <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600"></div>
                <span class="text-sm text-gray-600">${e}</span>
            </div>
        `,n}updateGlobalLoadingState(){const e=this.loadingStates.size>0;document.body.classList.toggle("loading",e)}isLoading(e=null){return e?this.loadingStates.has(e):this.loadingStates.size>0}}class E{static showUserError(e,n="error"){console.error("User Error:",e);let t=document.getElementById("error-notification");t||(t=document.createElement("div"),t.id="error-notification",t.className="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 w-full mx-4",document.body.appendChild(t));const i={error:"bg-red-500 text-white",warning:"bg-yellow-500 text-white",info:"bg-blue-500 text-white",success:"bg-green-500 text-white"};t.innerHTML=`
            <div class="rounded-lg p-4 shadow-lg ${i[n]||i.error}">
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <i class="fas fa-${n==="error"?"exclamation-triangle":n==="success"?"check-circle":"info-circle"} mr-2"></i>
                        <span>${e}</span>
                    </div>
                    <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-white hover:text-gray-200">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        `,setTimeout(()=>{t&&t.parentElement&&t.remove()},n==="success"?3e3:5e3)}static showSuccessMessage(e){this.showUserError(e,"success")}static handleDatabaseError(e,n="Database operation"){console.error(`${n} failed:`,e);let t="Ein unerwarteter Fehler ist aufgetreten.",i="error";if(e.message){const s=e.message.toLowerCase();e.message.includes("nicht verf√ºgbar")?(t=e.message,i="warning"):s.includes("auth")||s.includes("unauthorized")||s.includes("forbidden")?t="Authentifizierungsfehler. Bitte melden Sie sich erneut an.":s.includes("network")||s.includes("fetch")||s.includes("timeout")?t="Netzwerkfehler. Bitte √ºberpr√ºfen Sie Ihre Internetverbindung.":s.includes("constraint")||s.includes("duplicate")||s.includes("unique")?t="Diese Daten existieren bereits oder verletzen Datenbankregeln.":s.includes("validierung")||e.message.includes("Validierungsfehler")?(t=e.message,i="warning"):s.includes("cdn")||s.includes("blocked")?(t="CDN blockiert - Anwendung l√§uft im Demo-Modus.",i="info"):s.includes("session")||s.includes("token")?t="Session abgelaufen. Bitte melden Sie sich erneut an.":s.includes("permission")||s.includes("denied")?t="Keine Berechtigung f√ºr diese Aktion.":s.includes("not found")||s.includes("404")?(t="Die angeforderten Daten wurden nicht gefunden.",i="warning"):s.includes("server")||s.includes("500")||s.includes("503")?t="Server tempor√§r nicht verf√ºgbar. Bitte versuchen Sie es sp√§ter erneut.":s.includes("offline")&&(t="Keine Internetverbindung. Funktionen sind eingeschr√§nkt.",i="warning")}if(typeof window<"u"&&window.connectionMonitor){const s=window.connectionMonitor.getStatus();s.connected||(s.connectionType==="fallback"?(t+=" (Demo-Modus aktiv)",i="info"):s.connectionType==="offline"&&(t+=" (Offline)"))}return this.showUserError(t,i),t}static async withErrorHandling(e,n="Operation fehlgeschlagen"){try{return await e()}catch(t){throw this.handleDatabaseError(t,n),t}}}const b=new U;class T{static async exportAllData(){try{b.show("Exportiere Daten...");const e=await v.loadAllAppData(),n={version:"1.0",exportDate:new Date().toISOString(),appVersion:"FIFA-Tracker-v1.0",data:e,totalRecords:this.calculateTotalRecords(e)},t=JSON.stringify(n,null,2),i=new Blob([t],{type:"application/json"}),s=document.createElement("a");return s.href=URL.createObjectURL(i),s.download=`fifa-tracker-backup-${new Date().toISOString().split("T")[0]}.json`,s.click(),b.hide(),{success:!0,message:"Daten erfolgreich exportiert!"}}catch(e){return b.hide(),E.handle(e,"Fehler beim Exportieren der Daten"),{success:!1,error:e.message}}}static async importData(e){try{b.show("Importiere Daten...");const n=await this.readFileAsText(e),t=JSON.parse(n);if(!this.validateImportData(t))throw new Error("Ung√ºltiges Backup-Format");const i=`Backup vom ${new Date(t.exportDate).toLocaleDateString("de-DE")} importieren?

Enth√§lt ${t.totalRecords} Datens√§tze.
WARNUNG: Aktuelle Daten werden √ºberschrieben!`;return confirm(i)?(await this.importToDatabase(t.data),b.hide(),window.renderCurrentTab&&await window.renderCurrentTab(),{success:!0,message:`${t.totalRecords} Datens√§tze erfolgreich importiert!`,importDate:t.exportDate}):(b.hide(),{success:!1,cancelled:!0})}catch(n){return b.hide(),E.handle(n,"Fehler beim Importieren der Daten"),{success:!1,error:n.message}}}static async exportPlayerStats(){try{b.show("Exportiere Spieler-Statistiken...");const e=await v.getAllPlayers(),n=await v.getAllMatches(),t=e.map(d=>{const h=n.filter(m=>{var f,p;return((f=m.aek_players)==null?void 0:f.includes(d.id))||((p=m.real_players)==null?void 0:p.includes(d.id))}),o=h.reduce((m,f)=>{const p=d.team==="AEK"?f.aek_goals||[]:f.real_goals||[];return m+p.filter(S=>S.player_id===d.id).length},0),l=h.filter(m=>d.team==="AEK"?(m.aek_score||0)>(m.real_score||0):(m.real_score||0)>(m.aek_score||0)).length;return{name:d.name,team:d.team,position:d.position,matches:h.length,goals:o,wins:l,winRate:h.length>0?(l/h.length*100).toFixed(1)+"%":"0%",goalsPerGame:h.length>0?(o/h.length).toFixed(2):"0.00"}}),i=`Name,Team,Position,Spiele,Tore,Siege,Siegrate,Tore pro Spiel
`,s=t.map(d=>`"${d.name}","${d.team}","${d.position}",${d.matches},${d.goals},${d.wins},"${d.winRate}","${d.goalsPerGame}"`).join(`
`),c=i+s,r=new Blob([c],{type:"text/csv;charset=utf-8;"}),a=document.createElement("a");return a.href=URL.createObjectURL(r),a.download=`spieler-statistiken-${new Date().toISOString().split("T")[0]}.csv`,a.click(),b.hide(),{success:!0,message:"Spieler-Statistiken erfolgreich exportiert!"}}catch(e){return b.hide(),E.handle(e,"Fehler beim Exportieren der Spieler-Statistiken"),{success:!1,error:e.message}}}static readFileAsText(e){return new Promise((n,t)=>{const i=new FileReader;i.onload=s=>n(s.target.result),i.onerror=s=>t(s),i.readAsText(e)})}static validateImportData(e){return e&&e.version&&e.exportDate&&e.data&&typeof e.data=="object"}static calculateTotalRecords(e){let n=0;return e.players&&(n+=e.players.length),e.matches&&(n+=e.matches.length),e.bans&&(n+=e.bans.length),e.transactions&&(n+=e.transactions.length),e.finances&&(n+=e.finances.length),n}static async importToDatabase(e){const{user:n}=await g.auth.getUser();if(!n.user)throw new Error("Nicht angemeldet");e.players&&(await g.from("players").delete().neq("id","never-match"),e.players.length>0&&await g.from("players").insert(e.players)),e.matches&&(await g.from("matches").delete().neq("id","never-match"),e.matches.length>0&&await g.from("matches").insert(e.matches)),e.bans&&(await g.from("bans").delete().neq("id","never-match"),e.bans.length>0&&await g.from("bans").insert(e.bans)),e.transactions&&(await g.from("transactions").delete().neq("id","never-match"),e.transactions.length>0&&await g.from("transactions").insert(e.transactions)),e.finances&&(await g.from("finances").delete().neq("id","never-match"),e.finances.length>0&&await g.from("finances").insert(e.finances))}}window.exportAllData=async function(){const u=await T.exportAllData();u.success?alert("‚úÖ "+u.message):alert("‚ùå Export fehlgeschlagen: "+u.error)};window.exportPlayerStats=async function(){const u=await T.exportPlayerStats();u.success?alert("‚úÖ "+u.message):alert("‚ùå Export fehlgeschlagen: "+u.error)};window.handleImportFile=async function(u){const e=u.files[0];if(!e)return;const n=await T.importData(e);n.success?alert("‚úÖ "+n.message):n.cancelled||alert("‚ùå Import fehlgeschlagen: "+n.error),u.value=""};export{T as DataExportImport};
