import{r as t,s as f,E as d}from"./index-Cq7XJdtr.js";function S(e,u="*",n={},h=[]){const[o,c]=t.useState(null),[y,i]=t.useState(!0),[l,r]=t.useState(null),a=t.useCallback(async()=>{var w;try{i(!0),r(null);const s=await f.select(e,u,n);if(s.data&&s.data.length>0)c(s.data);else{if(s.error)throw s.error;c(s.data||[])}}catch(s){r(s),(w=s.message)!=null&&w.includes("Failed to fetch")||d.handleDatabaseError(s,`Laden von ${e}`)}finally{i(!1)}},[e,u,JSON.stringify(n),...h]);t.useEffect(()=>{a()},[a]);const E=t.useCallback(()=>{a()},[a]);return{data:o,loading:y,error:l,refetch:E}}function p(e){const[u,n]=t.useState(!1),[h,o]=t.useState(null),c=t.useCallback(async l=>{try{n(!0),o(null);const r=await f.insert(e,l);if(r.error)throw r.error;return r}catch(r){throw o(r),d.handleDatabaseError(r,`Einfügen in ${e}`),r}finally{n(!1)}},[e]),y=t.useCallback(async(l,r)=>{try{n(!0),o(null);const a=await f.update(e,l,r);if(a.error)throw a.error;return a}catch(a){throw o(a),d.handleDatabaseError(a,`Aktualisieren in ${e}`),a}finally{n(!1)}},[e]),i=t.useCallback(async l=>{try{n(!0),o(null);const r=await f.delete(e,l);if(r.error)throw r.error;return r}catch(r){throw o(r),d.handleDatabaseError(r,`Löschen aus ${e}`),r}finally{n(!1)}},[e]);return{insert:c,update:y,remove:i,loading:u,error:h}}export{p as a,S as u};
