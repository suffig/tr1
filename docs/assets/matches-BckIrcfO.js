import{s}from"./dataManager-CtWei30S.js";new Date().toISOString().slice(0,10);async function q(o){try{if(console.log(`Starting deletion of match ${o}`),!o||typeof o!="number")throw new Error("Invalid match ID provided for deletion");const{data:f,error:l}=await s.from("matches").select("date,prizeaek,prizereal,goalslista,goalslistb,manofthematch,yellowa,reda,yellowb,redb").eq("id",o);if(l)throw console.error("Error fetching match:",l),l;if(!f||f.length===0){console.warn(`Match with id ${o} not found`);return}const t=f[0];t.date||console.warn(`Match ${o} has no date - this may cause issues with transaction cleanup`),console.log("Deleting match data:",t);const b={financialChanges:[],playerGoalChanges:[],sdsChanges:[]};console.log(`Fetching transactions for match ${o} before deletion`);const{data:d,error:g}=await s.from("transactions").select("team,amount,type").eq("match_id",o);if(g)throw console.error("Error fetching transactions:",g),g;const h=(d==null?void 0:d.filter(a=>["Preisgeld","Bonus SdS","SdS Bonus","Echtgeld-Ausgleich","Echtgeld-Ausgleich (getilgt)","Strafe","Bonus","Penalty"].includes(a.type)))||[];if(console.log(`Reversing financial changes for ${(h==null?void 0:h.length)||0} transactions`),h&&h.length>0)for(const a of h)if(a.type==="Echtgeld-Ausgleich"){const{data:n,error:r}=await s.from("finances").select("debt").eq("team",a.team);if(r){console.error(`Error fetching finances for team ${a.team}:`,r);continue}const e=n&&n.length>0?n[0]:null,i=(e==null?void 0:e.debt)||0;let c=i-a.amount;c<0&&(c=0),b.financialChanges.push({team:a.team,type:"debt",oldValue:i,newValue:c}),await s.from("finances").update({debt:c}).eq("team",a.team)}else{const{data:n,error:r}=await s.from("finances").select("balance").eq("team",a.team);if(r){console.error(`Error fetching finances for team ${a.team}:`,r);continue}const e=n&&n.length>0?n[0]:null,i=(e==null?void 0:e.balance)||0;let c=i-a.amount;c<0&&(c=0),b.financialChanges.push({team:a.team,type:"balance",oldValue:i,newValue:c}),await s.from("finances").update({balance:c}).eq("team",a.team)}if(typeof t.prizeaek=="number"&&t.prizeaek!==0){const{data:a,error:n}=await s.from("finances").select("balance").eq("team","AEK");if(n)console.error("Error fetching AEK finances:",n);else if(a&&a.length>0){const r=a[0];let e=((r==null?void 0:r.balance)||0)-t.prizeaek;e<0&&(e=0),await s.from("finances").update({balance:e}).eq("team","AEK")}}if(typeof t.prizereal=="number"&&t.prizereal!==0){const{data:a,error:n}=await s.from("finances").select("balance").eq("team","Real");if(n)console.error("Error fetching Real finances:",n);else if(a&&a.length>0){const r=a[0];let e=((r==null?void 0:r.balance)||0)-t.prizereal;e<0&&(e=0),await s.from("finances").update({balance:e}).eq("team","Real")}}console.log(`Deleting ${(h==null?void 0:h.length)||0} transactions for match ${o}`);const{error:u}=await s.from("transactions").delete().eq("match_id",o);if(u)throw console.error("Error deleting transactions:",u),u;const E=async(a,n)=>{if(!a||!Array.isArray(a))return;const r={};if(a.length>0&&typeof a[0]=="object"&&a[0].player!==void 0)a.forEach(e=>{e.player&&(r[e.player]=(r[e.player]||0)+(e.count||1))});else for(const e of a)e&&(r[e]=(r[e]||0)+1);for(const[e,i]of Object.entries(r)){const{data:c,error:m}=await s.from("players").select("goals").eq("name",e).eq("team",n);if(m){console.error(`Error fetching player ${e} for goal removal:`,m);continue}if(!c||c.length===0){console.warn(`Player ${e} not found in team ${n} for goal removal`);continue}const w=c[0];let y=((w==null?void 0:w.goals)||0)-i;y<0&&(y=0);const{error:$}=await s.from("players").update({goals:y}).eq("name",e).eq("team",n);$&&console.error(`Error updating goals for player ${e}:`,$)}};if(await E(t.goalslista,"AEK"),await E(t.goalslistb,"Real"),t.manofthematch){let a=null;const n=(r,e)=>!r||!r.length?!1:typeof r[0]=="object"&&r[0].player!==void 0?r.some(i=>i.player===e):r.includes(e);if(n(t.goalslista,t.manofthematch))a="AEK";else if(n(t.goalslistb,t.manofthematch))a="Real";else{const{data:r,error:e}=await s.from("players").select("team").eq("name",t.manofthematch);e?console.error(`Error fetching player ${t.manofthematch} for team lookup:`,e):r&&r.length>0?a=r[0].team:console.warn(`Player ${t.manofthematch} not found for SdS team determination`)}if(a){const{data:r,error:e}=await s.from("spieler_des_spiels").select("count").eq("name",t.manofthematch).eq("team",a);if(e)console.error(`Error fetching SdS entry for ${t.manofthematch}:`,e);else if(r&&r.length>0){const i=r[0],c=Math.max(0,i.count-1),{error:m}=await s.from("spieler_des_spiels").update({count:c}).eq("name",t.manofthematch).eq("team",a);m&&console.error(`Error updating SdS count for ${t.manofthematch}:`,m)}else console.warn(`SdS entry for ${t.manofthematch} in team ${a} not found`)}}(t.yellowa>0||t.reda>0||t.yellowb>0||t.redb>0)&&console.log(`Match had cards: AEK(${t.yellowa}Y,${t.reda}R) Real(${t.yellowb}Y,${t.redb}R)`);const{error:p}=await s.from("matches").delete().eq("id",o);if(p)throw console.error("Error deleting match:",p),p;console.log(`Successfully deleted match ${o} and all related data`)}catch(f){throw console.error(`Failed to delete match ${o}:`,f),alert(`Fehler beim L√∂schen des Spiels: ${f.message}`),f}}window.showMatchStatistics=function(){if(matches.length===0){alert("üìä Keine Spiele vorhanden f√ºr Statistiken");return}const o={totalMatches:matches.length,aekWins:matches.filter(l=>(l.goalsa||0)>(l.goalsb||0)).length,realWins:matches.filter(l=>(l.goalsb||0)>(l.goalsa||0)).length,draws:matches.filter(l=>(l.goalsa||0)===(l.goalsb||0)).length,totalGoals:matches.reduce((l,t)=>l+(t.goalsa||0)+(t.goalsb||0),0),highestScore:Math.max(...matches.map(l=>Math.max(l.goalsa||0,l.goalsb||0))),averageGoals:0};o.averageGoals=(o.totalGoals/o.totalMatches).toFixed(1);const f=`üèÜ Match-Statistiken:

Gesamt: ${o.totalMatches} Spiele
AEK Siege: ${o.aekWins}
Real Siege: ${o.realWins}
Unentschieden: ${o.draws}

Tore gesamt: ${o.totalGoals}
√ò Tore/Spiel: ${o.averageGoals}
H√∂chstes Ergebnis: ${o.highestScore} Tore`;alert(f)};export{q as deleteMatch};
