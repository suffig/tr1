import{r as m,z as f,j as t}from"./index-CUiKqHlh.js";import{u as h}from"./useSupabase-D5mCqzzm.js";class N{constructor(){this.achievements=[{id:"first_win_aek",title:"Erster AEK Sieg",description:"Gewinne das erste Spiel mit AEK",icon:"🏆",category:"matches",requirement:{type:"team_wins",team:"AEK",count:1}},{id:"first_win_real",title:"Erster Real Sieg",description:"Gewinne das erste Spiel mit Real",icon:"🏆",category:"matches",requirement:{type:"team_wins",team:"Real",count:1}},{id:"hat_trick",title:"Hattrick-Held",description:"Erziele 3 oder mehr Tore in einem Spiel",icon:"⚽",category:"goals",requirement:{type:"goals_in_match",count:3}},{id:"high_scoring",title:"Torspektakel",description:"Spiele ein Match mit 6+ Gesamttoren",icon:"🎯",category:"goals",requirement:{type:"total_goals_match",count:6}},{id:"win_streak_3",title:"Siegesserie",description:"Gewinne 3 Spiele in Folge",icon:"🔥",category:"streaks",requirement:{type:"win_streak",count:3}},{id:"clean_sheet",title:"Zu Null",description:"Gewinne ein Spiel ohne Gegentor",icon:"🛡️",category:"defense",requirement:{type:"clean_sheet",count:1}},{id:"top_scorer_10",title:"Torjäger",description:"Erziele 10 Tore mit einem Spieler",icon:"👑",category:"players",requirement:{type:"player_goals",count:10}},{id:"veteran",title:"Veteran",description:"Spiele 25 Matches",icon:"🎖️",category:"milestones",requirement:{type:"total_matches",count:25}}],this.unlockedAchievements=new Set(JSON.parse(localStorage.getItem("fifa-achievements")||"[]"))}async checkAchievements(s,a,r){const i=[];for(const e of this.achievements)this.unlockedAchievements.has(e.id)||await this.checkRequirement(e.requirement,s,a,r)&&(this.unlockedAchievements.add(e.id),i.push(e));return i.length>0&&(localStorage.setItem("fifa-achievements",JSON.stringify([...this.unlockedAchievements])),i.forEach((e,c)=>{setTimeout(()=>{f.success(`🏆 Achievement Unlocked: ${e.title}`,{duration:5e3,style:{background:"#FCD34D",color:"#92400E",fontWeight:"bold"}})},c*1e3)})),i}async checkRequirement(s,a,r,i){switch(s.type){case"team_wins":return this.countTeamWins(a,s.team)>=s.count;case"goals_in_match":return a.some(e=>Math.max(e.goalsa||0,e.goalsb||0)>=s.count);case"total_goals_match":return a.some(e=>(e.goalsa||0)+(e.goalsb||0)>=s.count);case"win_streak":return this.checkWinStreak(a)>=s.count;case"clean_sheet":return a.some(e=>{const c=e.goalsa||0,l=e.goalsb||0;return c>0&&l===0||l>0&&c===0});case"player_goals":return r.some(e=>(e.goals||0)>=s.count);case"total_matches":return a.length>=s.count;default:return!1}}countTeamWins(s,a){return s.filter(r=>{const i=r.goalsa||0,e=r.goalsb||0;return a==="AEK"&&i>e||a==="Real"&&e>i}).length}checkWinStreak(s){let a=0,r=0,i=null;for(const e of s){const c=e.goalsa||0,l=e.goalsb||0;let o=null;c>l?o="AEK":l>c&&(o="Real"),o&&o===i?r++:(a=Math.max(a,r),r=o?1:0,i=o)}return Math.max(a,r)}async getProgress(s,a,r){const i=[];for(const e of this.achievements){const c=this.unlockedAchievements.has(e.id);let l=0;c||(l=await this.getRequirementProgress(e.requirement,s,a,r)),i.push({...e,unlocked:c,progress:l,maxProgress:e.requirement.count||1,percentage:c?100:Math.min(100,l/(e.requirement.count||1)*100)})}return i.sort((e,c)=>e.unlocked!==c.unlocked?e.unlocked?1:-1:c.percentage-e.percentage)}async getRequirementProgress(s,a,r,i){switch(s.type){case"team_wins":return this.countTeamWins(a,s.team);case"total_matches":return a.length;case"player_goals":return Math.max(0,...r.map(e=>e.goals||0));case"win_streak":return this.checkWinStreak(a);default:return 0}}getCategories(){return[...new Set(this.achievements.map(s=>s.category))]}}const g=new N,E=()=>{const{data:d}=h("matches","*"),{data:s}=h("players","*"),{data:a}=h("bans","*"),[r,i]=m.useState([]),[e,c]=m.useState(!0),[l,o]=m.useState("all"),[u,b]=m.useState({unlocked:0,total:0,percentage:0});m.useEffect(()=>{d&&s&&a&&k()},[d,s,a]);const k=async()=>{try{c(!0),await g.checkAchievements(d||[],s||[],a||[]);const n=await g.getProgress(d||[],s||[],a||[]);i(n);const p=n.filter(S=>S.unlocked).length,y=n.length,w=Math.round(p/y*100);b({unlocked:p,total:y,percentage:w})}catch(n){console.error("Error loading achievements:",n),f.error("Fehler beim Laden der Achievements")}finally{c(!1)}},v=g.getCategories(),j={matches:"Spiele",goals:"Tore",streaks:"Serien",defense:"Verteidigung",players:"Spieler",milestones:"Meilensteine"},x=l==="all"?r:r.filter(n=>n.category===l);return e?t.jsx("div",{className:"p-6 max-w-7xl mx-auto",children:t.jsxs("div",{className:"flex items-center justify-center py-8",children:[t.jsx("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-accent-primary"}),t.jsx("span",{className:"ml-2 text-text-secondary",children:"Lade Achievements..."})]})}):t.jsxs("div",{className:"p-6 max-w-7xl mx-auto space-y-6",children:[t.jsxs("div",{className:"flex items-center gap-3",children:[t.jsx("span",{className:"text-3xl",children:"🏆"}),t.jsxs("div",{children:[t.jsx("h1",{className:"text-2xl font-bold text-text-primary",children:"Achievements"}),t.jsx("p",{className:"text-text-secondary",children:"Verfolge deine Erfolge und Meilensteine"})]})]}),t.jsxs("div",{className:"card p-6",children:[t.jsxs("div",{className:"flex justify-between items-center mb-4",children:[t.jsx("h2",{className:"text-lg font-bold text-text-primary",children:"Fortschritt"}),t.jsxs("span",{className:"text-lg font-bold text-accent-primary",children:[u.unlocked,"/",u.total]})]}),t.jsx("div",{className:"w-full bg-bg-secondary rounded-full h-3 mb-2",children:t.jsx("div",{className:"bg-accent-primary h-3 rounded-full transition-all duration-300",style:{width:`${u.percentage}%`}})}),t.jsxs("div",{className:"text-sm text-text-secondary text-center",children:[u.percentage,"% abgeschlossen"]})]}),t.jsxs("div",{className:"flex flex-wrap gap-2",children:[t.jsx("button",{onClick:()=>o("all"),className:`px-3 py-1 rounded text-sm transition-colors ${l==="all"?"bg-accent-primary text-white":"bg-bg-secondary text-text-secondary hover:bg-bg-tertiary"}`,children:"Alle"}),v.map(n=>t.jsx("button",{onClick:()=>o(n),className:`px-3 py-1 rounded text-sm transition-colors ${l===n?"bg-accent-primary text-white":"bg-bg-secondary text-text-secondary hover:bg-bg-tertiary"}`,children:j[n]||n},n))]}),t.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:x.map(n=>t.jsx("div",{className:`card p-4 transition-all duration-300 hover:shadow-lg ${n.unlocked?"border-accent-primary bg-accent-primary/5":"border-border-primary"}`,children:t.jsxs("div",{className:"flex items-start gap-3",children:[t.jsx("div",{className:`text-3xl ${n.unlocked?"animate-pulse":"grayscale opacity-50"}`,children:n.icon}),t.jsxs("div",{className:"flex-1",children:[t.jsx("h4",{className:"font-bold text-text-primary mb-1",children:n.title}),t.jsx("p",{className:"text-sm text-text-secondary mb-2",children:n.description}),n.unlocked?t.jsx("div",{className:"text-xs font-bold text-accent-primary",children:"🎉 FREIGESCHALTET!"}):t.jsxs(t.Fragment,{children:[t.jsx("div",{className:"w-full bg-bg-secondary rounded-full h-2 mb-1",children:t.jsx("div",{className:"bg-accent-primary h-2 rounded-full transition-all duration-300",style:{width:`${n.percentage}%`}})}),t.jsxs("div",{className:"text-xs text-text-secondary",children:[n.progress,"/",n.maxProgress]})]})]})]})},n.id))}),x.length===0&&t.jsx("div",{className:"text-center py-8 text-text-secondary",children:"Keine Achievements in dieser Kategorie gefunden."})]})};export{E as default};
